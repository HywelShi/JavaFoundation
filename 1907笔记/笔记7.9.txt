
1.变量:程序在内存当中开辟的存储空间

数据类型 变量名 = 值;
int count = 10;
=赋值 

变量名的命名：(对象的命名)
1.只能由数字 英文字母 _和$组成
2.大小写敏感
3.数字不能开头
4.不能使用关键字-java当中有特殊含义的单词
5.命名尽量的见名知意
6.尽量不使用中文命名 减少乱码
7.命名最好采用驼峰命名法 多个单词组成总第二个开始首字母大写
8.帕斯卡命名法 多个单词组成总第一个开始首字母大写


班级学生数学成绩
classstudentmathscore

classStudentMathScore
CSMScore



2.数据类型-随机数
8大基本数据类型
byte	位
short	短整型
int	整型	-整数
long	长整型
double	双精度浮点型-小数
float	单精度浮点型
char	字符型 0-65535
小写字母的范围为97-122



boolean	布尔型

随机数公式：
a-b之间的随机整数 a<b
(int)(Math.random()*(b-a+1)+a)

1-100之间的随机数
(int)(Math.random()*100+1)
Math java提供的一个数学类 里面包含了很多的数学方法

Math.random()		0	-	0.999...
Math.random()*100	0	-	99.99...
Math.random()*100+1	1	-	100.99..
(int)(Math.random()*100+1) 1	-	100
将小数直接转换为整数在前面之间添加(int) 将小数位无条件舍去

其他的引用类型

案例：
利用随机数随机产生一定数量的英文小写字母
输入英文字母 对比
提示对了多少个错了多少个
1.生成字母
2.输入字母
3.对比
4.得到结果






3.数组的赋值与访问
数组的定义
方式1：
数据类型[] 数组名 = new 数据类型[长度];
优点：可以利用循环实现多个数据操作
缺点：默认值可能会有影响

不同的基本数据类型数组有默认值
int	0
double	0.0
char	空字符
boolean false

引用数据类型默认是null

方式2：
数据类型[] 数组名 = {具体的内容};
优点：内容清晰 缺点：内容过多不可操作



长度的获取：数组名.length来获取
数组的赋值 取值
都是通过数组的下标来赋值和取值
数组名[下标] 下标从0开始
***下标的最大值 = 长度-1

***数组的复制


Scanner用法
第一步：引入JRE提供的Scanner工具类
第二步：Scanner scan = new Scanner(System.in);
第三步：使用scan所对应的方法
	scan.nextInt();接收整数
	scan.nextDouble();接收小数
	scan.next();接收字符串


int[] num1 = {1,2,3,4,5}
将num1里面的内容复制到num2里面
1.定义num2 长度跟num1一致
利用循环从num1里面取 然后存入num2内

2.利用新数组 = Arrays.CopyOf(源数组，源数组的长度);

3.System.arraycopy(源数组，源数组的起始位置，目标数组，
目标数组的起始位置，拷贝的个数);

如果起始位置都为0，并且拷贝个数为源数组的长度则为全局复制

三种复制方法执行效率：
方法3>方法2>方法1


查询数组中是否包含某一个元素
1.从数组的第一个逐渐往后比较
2.int num = Arrays.binarySearch(查询的数组，查询的元素);
如果返回值num为负数则没有
返回值num为一个正数则为查询元素的下标





案例1：
录入班级十个人的学生成绩
录入完毕之后
输出班级最高分 最低分 平均分

1.成绩数据类型：小数 double
2.定义一个double型数组 长度为10 存成绩
3.利用数组下标和循环存入数组
4.借助Scanner工具录入成绩
5.录入完毕还要自动判断最大值和最小值
6.计算平均分 总分/人数



案例2：
循环录入十个班级学生姓名
录入完毕之后随机生成一个下标0-9
抽取其中一个学生
1.姓名数据类型：
String类型  引用类型 底层引用了字符char
2.定义学生姓名数组
String[] names = new String[10];
3.引入Scanner
4.利用循环使用scan.next()将输入的姓名存入数组
5.产生一个0-9的随机数
6.根据产生的随机数从数组里面取姓名






















